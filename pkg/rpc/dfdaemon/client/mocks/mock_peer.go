// Code generated by MockGen. DO NOT EDIT.
// Source: d7y.io/dragonfly/v2/pkg/rpc/dfdaemon/client (interfaces: ElasticClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	base "d7y.io/dragonfly/v2/pkg/rpc/base"
	scheduler "d7y.io/dragonfly/v2/pkg/rpc/scheduler"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockElasticClient is a mock of ElasticClient interface.
type MockElasticClient struct {
	ctrl     *gomock.Controller
	recorder *MockElasticClientMockRecorder
}

// MockElasticClientMockRecorder is the mock recorder for MockElasticClient.
type MockElasticClientMockRecorder struct {
	mock *MockElasticClient
}

// NewMockElasticClient creates a new mock instance.
func NewMockElasticClient(ctrl *gomock.Controller) *MockElasticClient {
	mock := &MockElasticClient{ctrl: ctrl}
	mock.recorder = &MockElasticClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockElasticClient) EXPECT() *MockElasticClientMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockElasticClient) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockElasticClientMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockElasticClient)(nil).Close))
}

// GetPieceTasks mocks base method.
func (m *MockElasticClient) GetPieceTasks(arg0 context.Context, arg1 *scheduler.PeerPacket_DestPeer, arg2 *base.PieceTaskRequest, arg3 ...grpc.CallOption) (*base.PiecePacket, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetPieceTasks", varargs...)
	ret0, _ := ret[0].(*base.PiecePacket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPieceTasks indicates an expected call of GetPieceTasks.
func (mr *MockElasticClientMockRecorder) GetPieceTasks(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPieceTasks", reflect.TypeOf((*MockElasticClient)(nil).GetPieceTasks), varargs...)
}
